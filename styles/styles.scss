@import "colors.scss";

body {
  font-family: 'Segoe Ui', Verdana, sans-serif;
  padding:1rem;
}

h1,h2,h3 {
  .subheading {
    font-size: .75em;
    font-weight: normal
  }
}

div.message {
  padding: 1em 1em;
  border-radius: .28571429rem;
  border: 1px solid var(--alt-border);
  margin-bottom: 1rem;
  h4 {margin: 0;}
  ul {margin: .5rem;}

  &.warning {
    background-color: var(--alt-background);
    border-left: 5px solid var(--orange);
  }
}

.card {
  $border-radius: .28571429rem;

  border: 1px solid var(--border);
  font-size: .8rem;
  border-radius: $border-radius;

  >:first-child {
    border-radius: $border-radius $border-radius 0 0!important;
    border-top: none!important;
  }

  .content {
    border: none;
    border-top: 1px solid var(--border);
    margin: 0;
    padding: 1em 1em;

    &.warning {
      background-color: var(--alt-background);
      border-left: 3px solid var(--orange);
    }

    h3, h4, h5 {
      margin: 0 0 .25rem 0;

      .subheading {font-weight: normal;}
    }

    ul.small {
      padding: 0 0 0 1.5rem;
      margin: .5rem 0 0 0;
      font-size: .75rem;
    }

    ul.comma-list {
      margin: .5rem 0;
      padding-left: 1rem;

      li {
        display: inline;

        &:after { content: ", ";}
        &:last-child:after { content: ""; }
      }
    }

    div.small {
      font-size: .75rem;
    }

  }

  .content.max-height {
    max-height:10rem;
    overflow-y: auto;
  }

  .content.header {
    font-size:1rem;
    background-color: var(--alt-background);
  }

  .content.raw-data {
    max-height: 25rem;
    overflow:auto;

  }

  .footer {
    border: none;
    border-top: 1px solid var(--border);
    margin: 0;

    a {
      display: inline-block;
      padding: 1em 1em;
      border-right: 1px solid var(--border);
      text-decoration: none;
      color: inherit;
    }

    a.selected {
      background-color:var(--alt-background);
    }
  }

  .header {
    .meta {
      color: --var(--grey);;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
    }
  }

  .json-tree {
    color: var(--foreground) !important;

    .json-tree-value-string { color: var(--green); }
    .json-tree-value-boolean { color: var(--red); }
    .json-tree-value-number { color: var(--blue); }
  }
}


ul.stats {
  padding:0;
  margin: 0;

  li {
    display: inline;
    padding: 0 .25rem;
    border-right: 1px solid var(--grey);
  }

  li:first-child {
    padding-left:0;
  }

  li:last-child {
    border-right:none;
  }
}



$themeColor: var(--blue);
$backColor: var(--grey);
.progress-circle {
  position: relative;
  display: inline-block;
  top:-.25rem;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  background-color: $backColor;
  &:before {
    content: '';
    position: absolute;
    top: .5rem;
    left: .5rem;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    background-color: var(--background);
  }
  &:after {
    content: '';
    display: inline-block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: $themeColor;
  }

  .progress-number {
    position: absolute;
    top: 50%;
    width: 100%;
    line-height: 1;
    margin-top: -0.35rem;
    text-align: center;
    font-size: .8rem;
    color: var(--foreground);
  }
}

$step: 1;
$loops: round(100 / $step);
$increment: 360 / $loops;
$half: round($loops / 2);

@for $i from 0 through $loops {
  @if $i < 10 or $i % 5 == 0 {
    .progress-circle.progress-#{$i * $step}:after {
      @if $i < $half {
        $nextDeg: 90deg + ($increment * $i);
        background-image: linear-gradient(90deg, $backColor 50%, transparent 50%, transparent), linear-gradient($nextDeg, $themeColor 50%, $backColor 50%, $backColor);
      }
      @else {
        $nextDeg: -90deg + ($increment * ($i - $half));
        background-image: linear-gradient($nextDeg, $themeColor 50%, transparent 50%, transparent), linear-gradient(270deg, $themeColor 50%, $backColor 50%, $backColor);
      }
    }
  }
}

//  color theme for syntax highlighting

/*********************************************************
* General
*/
pre[class*="language-"],
code[class*="language-"] {
  color: var(--foreground);
  font-size: 13px;
  text-shadow: none;
  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  direction: ltr;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}
pre[class*="language-"]::selection,
code[class*="language-"]::selection,
pre[class*="language-"]::mozselection,
code[class*="language-"]::mozselection {
  text-shadow: none;
  background: var(--background);
}
@media print {
  pre[class*="language-"],
  code[class*="language-"] {
    text-shadow: none;
  }
}
pre[class*="language-"] {
  padding: 1em;
  margin: .5em 0;
  overflow: auto;
  background: var(--background);
}
:not(pre) > code[class*="language-"] {
  padding: .1em .3em;
  border-radius: .3em;
  color: var(--foreground);
  background: var(--background);
}
/*********************************************************
* Tokens
*/
.namespace {
  opacity: .7;
}
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: var(--grey);
}
.token.punctuation {
  color:  var(--grey);
}
.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: var(--red);
}
.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: var(--green);
}
.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: var(--orange);
}
.token.atrule,
.token.attr-value,
.token.keyword {
  color: var(--blue);
}
.token.function {
  color: var(--red);
}
.token.regex,
.token.important,
.token.variable {
  color: var(--orange);
}
.token.important,
.token.bold {
  font-weight: bold;
}
.token.italic {
  font-style: italic;
}
.token.entity {
  cursor: help;
}
/*********************************************************
* Line highlighting
*/
pre[data-line] {
  position: relative;
}
pre[class*="language-"] > code[class*="language-"] {
  position: relative;
  z-index: 1;
}
.line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 1em;
  background: var(--background);
  box-shadow: inset 5px 0 0 var(--background);
  z-index: 0;
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
}
